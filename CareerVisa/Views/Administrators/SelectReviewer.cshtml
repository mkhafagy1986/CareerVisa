@model CareerVisa.Models.MultiNotAssignDocuments
@using GridMvc.Html
@using CareerVisa.App_Start
@using System.Configuration
@using CareerVisa.Models;
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework;

@{
    ViewBag.AdministratorDashBoardTitle = "Career Visa - Administrator - Assign Curriculum Vitae";
    ViewBag.Title = "SelectReviewer";
    Layout = "~/Views/Shared/_AdministratorsDashBoardLayout.cshtml";
}


<div class="x_title">
    <h2>Assign Multi Documents to Reviewer</h2>

    <div class="clearfix"></div>
</div>
<div class="clearfix"></div>
<br />
@using (Html.BeginForm("SelectReviewer", "Administrators", FormMethod.Post, new { name = "frm", id = "frm" }))
{
    <div class="code-cut">

        @Html.Grid(Model.NotAssignDocumentsViewModel).Columns(columns =>
        {
            columns.Add(c => c.DocumentOwnerUsername).Titled("Owner User Name.").SetWidth(200).Filterable(true);
            columns.Add(c => c.DocumentDescription).Titled("CV Description").SetWidth(350);
            columns.Add(c => c.DocumentUploadDate).Titled("CV Upload Date").SetWidth(100);
            columns.Add(c => c.DocumentStatus).Titled("CV Status").SetWidth(100);
        }).Sortable(true).WithPaging(10)

    </div>
    <div class="form-group  wow fadeInDown animated">
        @Html.LabelFor(model => model.AssignedDocument.ReviewerUserId, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-7">
            @{
                ApplicationDbContext db = new ApplicationDbContext();
                List<SelectListItem> ReviewersItems = new List<SelectListItem>();
                foreach (var user in db.Users.Where(u => u.Roles.Any(role => role.RoleId == "2")))
                {
                    ReviewersItems.Add(new SelectListItem
                    {
                        Text = user.FirstName + " " + user.Lastname,
                        Value = user.Id
                    });
                }
            }
            @Html.DropDownListFor(model => model.AssignedDocument.ReviewerUserId, ReviewersItems, "Select Reviewer", new { htmlAttributes = new { @class = "form-control", id = "reviewerid" } })
            @Html.ValidationMessageFor(model => model.AssignedDocument.ReviewerUserId, "", new { @class = "text-danger" })
        </div>
    </div>
    <p>
        <input id="btnAssignSelected" type="button" name="AssignSelectedButton" value="Assign Selected" class="btn btn-primary btn-lg fa fa-link" data />
        @*@Html.ActionLink(" Assign Selected", null, null, null, new { @class = "btn btn-primary btn-lg fa fa-link", data_target = "#modal-container", data_toggle = "modal", id = "btnAssignSelected" })*@
    </p>
}
