@model CareerVisa.Models.ApplicationUser

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_DashBoardLayout.cshtml";
}

<h2>View</h2>

<div class="container">
    <div class="row form-horizontal">
        <!-- left column -->
        <div class="col-md-3">
            <div class="text-center">
                @{
                    string profilePicturePath = string.Format("/UserProfilePictures/{0}", Model.PersonalPhotoPath);
                    FileInfo profilePicFile = new FileInfo(Server.MapPath(profilePicturePath));
                    if (!profilePicFile.Exists)
                    {
                        profilePicturePath = "/Images/default-profile-picture.jpg";
                    }
                }
                <img id="profilePic" src=@profilePicturePath class="avatar img-circle" alt="avatar" style="height: 100px;width: 100px">
            </div>
        </div>

        <!-- edit form column -->
        <div class="col-md-9 personal-info">
            <div class="alert alert-info alert-dismissable">
                <a class="panel-close close" data-dismiss="alert">×</a>
                @*<i class="fa fa-coffee"></i>*@
            </div>
            <h3>Personal info</h3>

            @Html.HiddenFor(model => model.Id)
            @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-lg-3 control-label" })
                <div class="col-lg-8">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Readonly input" ,@readonly= "readonly" } })
                    @*@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "col-lg-3 control-label" })
                <div class="col-lg-8">
                    @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control", @placeholder="Readonly input" ,@readonly="readonly" } })
                    @*@Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "col-lg-3 control-label" })
                <div class="col-lg-5">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control",@placeholder = "Readonly input", @readonly = "readonly" } })
                    @{
                        if (!Model.PhoneNumberConfirmed)
                        {
                            @Html.Raw(HttpUtility.HtmlDecode(" Not Varified."));

                            <div>
                                <a class="btn btn-success" href="@Url.Action("AddPhoneNumber", "Account")">
                                    <i class="fa fa-edit m-right-xs"></i>Edit Profile
                                </a>
                            </div>
                        }
                        else
                        {
                            @Html.Raw(HttpUtility.HtmlDecode(" Varified."));
                            <div style="display: none !important;">
                                <a class="btn btn-success" href="@Url.Action("AddPhoneNumber", "Account")">
                                    <i class="fa fa-edit m-right-xs"></i>Edit Profile
                                </a>
                            </div>
                        }
                    }
                    @*@Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-lg-3 control-label" })
                <div class="col-lg-8">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Readonly input", @readonly = "readonly" } })
                    @*@Html.ValidationMessageFor(model => model.Address, "", new {@class = "text-danger"})*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LinkedInURL, htmlAttributes: new { @class = "col-lg-3 control-label" })
                <div class="col-lg-8">
                    @Html.EditorFor(model => model.LinkedInURL, new { htmlAttributes = new { @class = "form-control", @placeholder = "Readonly input", @readonly = "readonly" } })
                    @*@Html.ValidationMessageFor(model => model.LinkedInURL, "", new {@class = "text-danger"})*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.WebsiteURL, htmlAttributes: new { @class = "col-lg-3 control-label" })
                <div class="col-lg-8">
                    @Html.EditorFor(model => model.WebsiteURL, new { htmlAttributes = new { @class = "form-control", @placeholder = "Readonly input", @readonly = "readonly" } })
                    @*@Html.ValidationMessageFor(model => model.WebsiteURL, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-3 control-label"></label>
                <div class="col-md-8">
                    <a class="btn btn-success" href="@Url.Action("EditProfile","JobSeeker")"><i class="fa fa-edit m-right-xs"></i>Edit Profile</a>
                    @*<input type="Submit" class="btn btn-primary" value="Save Changes">*@
                </div>
            </div>
        </div>
    </div>
</div>